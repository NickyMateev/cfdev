// Code generated by MockGen. DO NOT EDIT.
// Source: code.cloudfoundry.org/cfdev/analyticsd/command (interfaces: CloudControllerClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	url "net/url"
	reflect "reflect"
)

// MockCloudControllerClient is a mock of CloudControllerClient interface
type MockCloudControllerClient struct {
	ctrl     *gomock.Controller
	recorder *MockCloudControllerClientMockRecorder
}

// MockCloudControllerClientMockRecorder is the mock recorder for MockCloudControllerClient
type MockCloudControllerClientMockRecorder struct {
	mock *MockCloudControllerClient
}

// NewMockCloudControllerClient creates a new mock instance
func NewMockCloudControllerClient(ctrl *gomock.Controller) *MockCloudControllerClient {
	mock := &MockCloudControllerClient{ctrl: ctrl}
	mock.recorder = &MockCloudControllerClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCloudControllerClient) EXPECT() *MockCloudControllerClientMockRecorder {
	return m.recorder
}

// Fetch mocks base method
func (m *MockCloudControllerClient) Fetch(arg0 string, arg1 url.Values, arg2 interface{}) error {
	ret := m.ctrl.Call(m, "Fetch", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Fetch indicates an expected call of Fetch
func (mr *MockCloudControllerClientMockRecorder) Fetch(arg0, arg1, arg2 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Fetch", reflect.TypeOf((*MockCloudControllerClient)(nil).Fetch), arg0, arg1, arg2)
}
